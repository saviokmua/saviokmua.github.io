<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on RubyDev</title>
    <link>http://localhost:1313/categories/ruby/</link>
    <description>Recent content in Ruby on RubyDev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Turbo Frames in Ruby on Rails: Building Modal Windows Without JavaScript</title>
      <link>http://localhost:1313/turbo-frames-modal-example-ruby-on-rails/</link>
      <pubDate>Wed, 22 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/turbo-frames-modal-example-ruby-on-rails/</guid>
      <description>&lt;h1 id=&#34;turbo-frames-in-ruby-on-rails-building-modal-windows-without-javascript&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#turbo-frames-in-ruby-on-rails-building-modal-windows-without-javascript&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;Turbo Frames in Ruby on Rails: Building Modal Windows Without JavaScript&lt;/h1&gt;&lt;p&gt;Turbo Frames is a powerful feature of Hotwire that allows you to create dynamic, interactive interfaces in Ruby on Rails without writing JavaScript code. In this guide, we&amp;rsquo;ll build a complete example of a modal window for creating posts.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-turbo-frames&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#what-are-turbo-frames&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;What are Turbo Frames?&lt;/h2&gt;&lt;p&gt;Turbo Frames is a mechanism for updating parts of a page without reloading the entire page. This allows you to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Add RuboCop Checking for Your Ruby Project in GitLab CI</title>
      <link>http://localhost:1313/how-to-add-rubocop-checking-for-your-ruby-project-for-gitlab-ci/</link>
      <pubDate>Mon, 27 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/how-to-add-rubocop-checking-for-your-ruby-project-for-gitlab-ci/</guid>
      <description>&lt;h1 id=&#34;how-to-add-rubocop-checking-for-your-ruby-project-in-gitlab-ci&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#how-to-add-rubocop-checking-for-your-ruby-project-in-gitlab-ci&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;How to Add RuboCop Checking for Your Ruby Project in GitLab CI&lt;/h1&gt;&lt;p&gt;RuboCop is a Ruby static code analyzer and formatter that helps maintain consistent code style and catch potential issues. Integrating it into your GitLab CI pipeline ensures that all code changes meet your project&amp;rsquo;s quality standards before merging.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-rubocop&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#what-is-rubocop&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;What is RuboCop?&lt;/h2&gt;&lt;p&gt;RuboCop is a Ruby gem that:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Enforces Ruby style guide conventions&lt;/li&gt;&#xA;&lt;li&gt;Detects potential bugs and code smells&lt;/li&gt;&#xA;&lt;li&gt;Provides automatic code formatting&lt;/li&gt;&#xA;&lt;li&gt;Integrates with popular editors and CI systems&lt;/li&gt;&#xA;&lt;li&gt;Supports custom rules and configurations&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#prerequisites&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;&lt;p&gt;Before setting up RuboCop in GitLab CI, ensure you have:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
